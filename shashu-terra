1. What is Jenkins?
Jenkins is an open-source free automation tool used to build and test software projects. The tool makes it painless for developers to integrate changes to the project. Jenkins' primary focus is to keep track of the version control system and initiate and monitor a build system if there are any changes. It keeps an eye on the entire process and provides reports and notifications to alert.

Some typical reasons as to why Jenkins is so widely used are:

Developers and testers use Jenkins to detect defects in the software development lifecycle and automate the testing of builds. 
They use it to continuously monitor the code in real-time and integrate changes into the build.
Jenkins as it turns out, is a great fit for building a CI/CD pipeline because of its plugin-capabilities, and simple-to-use nature.
DevOps Certification Training Course
Gain expertise in the top DevOps toolsEXPLORE COURSEDevOps Certification Training Course
2. What are the features of Jenkins?
Some of the crucial features of Jenkins are the following:

It is a free and open-source automation tool
Jenkins provides a vast number of plugins
It is easy to set up and install on multiple operating systems
Provides pipeline support
Fast release cycles 
Easy upgrades
3. What is Groovy in Jenkins?
Apache Groovy is a dynamic object-oriented programming language used as a scripting language for Java platforms. 
Groovy is used to orchestrate the Jenkins pipeline and enables different teams to contribute in different languages. 
Groovy's syntax is very similar to that of Java, making it more seamless with the Java interface. 
The language with several features like Java compatibility and Development support.
4. How do you install Jenkins?
Follow the steps mentioned below to install Jenkins:

Install Java 
Install Apache Tomcat Server
Download Jenkins war File
Deploy Jenkins war File
5. Which commands can be used to begin Jenkins?
Commands that can be used to start Jenkins are:

Open the command prompt
After the command prompt opens, browse to the directory where Jenkins war is present
Then run the following command:
D:\>Java -jar Jenkins.war

6. What is "Continuous Integration" with reference to Jenkins?
Continuous Integration is a development practice where the codes can be integrated into a shared repository. 
The practice uses automated verifications for the early detection of problems. 
Continuous Integration triggers the build to find and identify bugs present in the code.
